{"version":3,"sources":["reducers/index.js","components/Lcd.js","components/TimerLenghtPanel.js","components/TimerDisplay.js","actions/index.js","components/App.js","index.js"],"names":["INITIAL_STATE","breakLength","sessionLength","isSession","isRunning","secondsLeft","Lcd","props","className","backgroundText","id","children","TimerLengthPanel","sessionOnOffClass","length","decClick","incClick","toLowerCase","onClick","aria-hidden","TimerDisplay","getMMSS","seconds","min","Math","floor","sec","mmss","reset","player","pause","currentTime","sample","process","React","createRef","this","play","console","log","startStop","start","stop","playAlarm","src","preload","ref","Component","connect","state","dispatch","getStore","timerId","clear","type","accurateInterval","schedTime","payload","breakIncrement","breakDecrement","sessionIncrement","sessionDecrement","href","target","store","createStore","action","_secLeft","_isSess","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAWMA,EAAgB,CACpBC,YAAa,EACbC,cAAe,GACfC,WAAW,EACXC,WAAW,EACXC,YAAa,M,kBCbA,SAASC,EAAIC,GAC1B,OACE,yBAAKC,UAAWD,EAAMC,WACpB,yBAAKA,UAAU,sBAAsBD,EAAME,eACzC,yBAAKC,GAAIH,EAAMG,GAAIF,UAAU,sBAAsBD,EAAMI,YCFjE,IA+CeC,EA/CU,SAACL,GAAU,IAI9BM,EAFIH,EAA8CH,EAA9CG,GAAII,EAA0CP,EAA1CO,OAAQC,EAAkCR,EAAlCQ,SAAUC,EAAwBT,EAAxBS,SAU9B,OANEH,EAJoDN,EAAdJ,UAII,YAArBO,EAAGO,cAA+B,mBAAqB,oBAElC,YAArBP,EAAGO,cAA+B,oBAAsB,mBAK7E,yBAAKT,UAAU,sBAEb,yBAAKE,GAAE,UAAKA,EAAGO,cAAR,UAA+BT,UAAS,wBAAmBK,IAAsBH,GAExF,yBAAKF,UAAU,qBAEb,4BACEA,UAAU,kCACVE,GAAE,UAAKA,EAAGO,cAAR,cACFC,QAASH,GAET,uBAAGP,UAAU,mBAAmBW,cAAY,UAG9C,kBAAC,EAAD,CAAKT,GAAE,UAAKA,EAAGO,cAAR,WAAgCR,eAAe,KAAKD,UAAU,mBAClEM,GAGH,4BACEN,UAAU,kCACVE,GAAE,UAAKA,EAAGO,cAAR,cACFC,QAASF,GAET,uBAAGR,UAAU,iBAAiBW,cAAY,a,wDCnC9CC,G,wDACJ,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAKRc,QAAU,SAACC,GACT,IAAMC,EAAMC,KAAKC,MAAMH,EAAU,IAC3BI,EAAMJ,EAAU,GAClBK,EAAOJ,EAAM,GAAK,IAAM,GAG5B,OAFAI,GAAI,UAAOJ,EAAP,MACJI,GAAQD,EAAM,GAAK,IAAM,IACXA,GAZG,EAuBnBE,MAAQ,WACN,EAAKrB,MAAMqB,QACX,EAAKC,OAAOC,QACZ,EAAKD,OAAOE,YAAc,GAxB1B,EAAKC,OAASC,uDACd,EAAKJ,OAASK,IAAMC,YAHH,E,2LAiBTC,KAAKP,OAAOQ,O,sDAElBC,QAAQC,IAAR,M,6IAWM,IAOJC,EAPG,SACoDJ,KAAK7B,MAAxDkC,EADD,EACCA,MAAOC,EADR,EACQA,KAAMtC,EADd,EACcA,UAAWD,EADzB,EACyBA,UAAWE,EADpC,EACoCA,YAEvB,IAAhBA,GACF+B,KAAKO,YAMHvC,EACFoC,EAAYE,EAGZF,EAAYC,EAOd,OACE,yBAAKjC,UAAU,4BACb,2BACEoC,IAAKR,KAAKJ,OACVa,QAAQ,GACRrC,UAAU,OACVE,GAAG,OACHoC,IAAK,SAAAA,GAAG,OAAI,EAAKjB,OAASiB,KAE5B,yBAAKpC,GAAG,cAAcF,UAAU,kBAC7BL,EAAY,UAAY,SAG3B,yBAAKK,UAAU,qBACb,4BACEE,GAAG,aACHF,UAAU,qBACVU,QAASsB,GACT,uBACEhC,UAAS,kCAA6BJ,EAAY,eAAiB,iBACnEe,cAAY,SACd,uBAAGX,UAAS,iCAA4BJ,EAAY,eAAiB,eACnEe,cAAY,UAIhB,kBAAC,EAAD,CACET,GAAG,YACHD,eAAe,QACfD,UAAU,kBACT4B,KAAKf,QAAQhB,IAGhB,yBAAKK,GAAG,OAER,4BACEA,GAAG,QACHF,UAAU,gCACVU,QAASkB,KAAKR,OACd,uBAAGpB,UAAU,gBAAgBW,cAAY,gB,GA3F1Be,IAAMa,YAqIlBC,eArBS,SAACC,GACvB,MAAO,CACL9C,UAAW8C,EAAM9C,UACjBC,UAAW6C,EAAM7C,cAIM,SAAC8C,GAC1B,MAAO,CACLtB,MADK,WAEHsB,GC5FG,SAACA,EAAUC,GAEhB,IAAMC,EAAUD,IAAWC,QACZ,MAAXA,GACFA,EAAQC,QAEVH,EAAS,CAAEI,KAlCM,cD0HjBb,MAJK,WAKHS,GCnFG,SAACA,GACN,IAAIE,EAAUG,KAAiB,SAACC,GAC9BN,EAAS,CAAEI,KAxCY,oBAyCtB,KAEHJ,EAAS,CACPI,KA7Ce,QA8CfG,QAASL,QD8EXV,KAPK,WAQHQ,GCxEG,SAACA,EAAUC,GAChB,IAAMC,EAAUD,IAAWC,QACZ,MAAXA,GACFA,EAAQC,QAEVH,EAAS,CAAEI,KAxDK,gBDgILN,CAA6C5B,GEjD7C4B,eA7BS,SAACC,GACvB,MAAO,CACLhD,YAAagD,EAAMhD,YACnBC,cAAe+C,EAAM/C,cACrBG,YAAa4C,EAAM5C,YACnBF,UAAW8C,EAAM9C,cAIM,SAAC+C,GAC1B,MAAO,CACLQ,eADK,WAEHR,EDxDG,CAAEI,KAboB,qBCwE3BK,eALK,WAMHT,EDxDG,CAAEI,KAhBoB,qBC2E3BM,iBATK,WAUHV,EDvDG,CAAEI,KApBsB,uBC8E7BO,iBAbK,WAcHX,EDvDG,CAAEI,KAvBsB,0BCmFlBN,EA7EH,SAACzC,GAAW,IAGpBL,EAQEK,EARFL,cACAD,EAOEM,EAPFN,YACA0D,EAMEpD,EANFoD,eACAD,EAKEnD,EALFmD,eACAG,EAIEtD,EAJFsD,iBACAD,EAGErD,EAHFqD,iBACAvD,EAEEE,EAFFF,YACAF,EACEI,EADFJ,UAGF,OACE,yBAAKK,UAAU,OAEb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAcH,YAAaA,IAE3B,yBAAKG,UAAU,mBAEb,kBAAC,EAAD,CACEE,GAAG,UACHI,OAAQZ,EACRc,SAAU4C,EACV7C,SAAU8C,EACV1D,UAAWA,IAGb,kBAAC,EAAD,CACEO,GAAG,QACHI,OAAQb,EACRe,SAAU0C,EACV3C,SAAU4C,EACVxD,UAAWA,MAMjB,+EACgD,uBAC5C2D,KAAK,wDACLC,OAAO,UAFqC,eC3ChDC,EAAQC,aNQC,WAAoC,IAAnChB,EAAkC,uDAA1BjD,EAAekE,EAAW,uCAExCjE,EAAkEgD,EAAlEhD,YAAaC,EAAqD+C,EAArD/C,cAAeG,EAAsC4C,EAAtC5C,YAAaF,EAAyB8C,EAAzB9C,UAAWC,EAAc6C,EAAd7C,UAG5D,OAAQ8D,EAAOZ,MACb,IIrB2B,kBJsBzB,OAAIlD,GAEgB,KAAhBH,EAFkBgD,EAGf,eACFA,EADL,CAEEhD,YAAaA,EAAc,IAG/B,II7B2B,kBJ8BzB,OAAIG,GAEgB,IAAhBH,EAFkBgD,EAGf,eACFA,EADL,CAEEhD,YAAaA,EAAc,IAG/B,IIrC6B,oBJsC3B,OAAIG,GAEkB,KAAlBF,EAFkB+C,EAGf,eACFA,EADL,CAEE/C,cAAeA,EAAgB,EAC/BG,YAAaA,EAAc,KAG/B,II9C6B,oBJ+C3B,OAAID,GAEkB,IAAlBF,EAFkB+C,EAGf,eACFA,EADL,CAEE/C,cAAeA,EAAgB,EAC/BG,YAAaA,EAAc,KAG/B,IIvDiB,QJwDf,OAAOL,EAET,IIzDiB,QJ0Df,OAAO,eACFiD,EADL,CAEE7C,WAAW,EACXgD,QAASc,EAAOT,UAGpB,II9DgB,OJ+Dd,OAAO,eACFR,EADL,CAEE7C,WAAW,IAKf,IIvEyB,gBJwEvB,IAAI+D,EACAC,EAQJ,OAPoB,IAAhB/D,EAEF8D,EAAW,KADXC,GAAWjE,GACgBD,EAAgBD,IAE3CmE,EAAUjE,EACVgE,EAAW9D,EAAc,GAEpB,eACF4C,EADL,CAEE5C,YAAa8D,EACbhE,UAAWiE,IAIf,QACE,OAAOnB,KMxFsBoB,YAAgBC,MAEnDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.34a49845.chunk.js","sourcesContent":["import {\n  BREAK_INCREMENT,\n  BREAK_DECREMENT,\n  SESSION_INCREMENT,\n  SESSION_DECREMENT,\n  RESET,\n  START,\n  STOP,\n  DEC_TIME_LEFT\n} from '../actions';\n\nconst INITIAL_STATE = {\n  breakLength: 5,\n  sessionLength: 25,\n  isSession: true,\n  isRunning: false,\n  secondsLeft: 25 * 60\n}\n\nexport default (state = INITIAL_STATE, action) => {\n\n  const { breakLength, sessionLength, secondsLeft, isSession, isRunning } = state;\n\n\n  switch (action.type) {\n    case BREAK_INCREMENT:\n      if (isRunning) return state;\n      //\n      if (breakLength === 60) return state; // max length 60m\n      return {\n        ...state,\n        breakLength: breakLength + 1\n      }\n\n    case BREAK_DECREMENT:\n      if (isRunning) return state;\n      //\n      if (breakLength === 1) return state; // min length 1\n      return {\n        ...state,\n        breakLength: breakLength - 1\n      }\n\n    case SESSION_INCREMENT:\n      if (isRunning) return state;\n      //\n      if (sessionLength === 60) return state; // max length 60m\n      return {\n        ...state,\n        sessionLength: sessionLength + 1,\n        secondsLeft: secondsLeft + 60\n      }\n\n    case SESSION_DECREMENT:\n      if (isRunning) return state;\n      //\n      if (sessionLength === 1) return state; // min length 1\n      return {\n        ...state,\n        sessionLength: sessionLength - 1,\n        secondsLeft: secondsLeft - 60\n      }\n\n    case RESET:\n      return INITIAL_STATE;\n\n    case START:\n      return {\n        ...state,\n        isRunning: true,\n        timerId: action.payload\n      }\n\n    case STOP: {\n      return {\n        ...state,\n        isRunning: false\n      }\n    }\n\n\n    case DEC_TIME_LEFT:\n      let _secLeft;\n      let _isSess;\n      if (secondsLeft === 0) {\n        _isSess = !isSession;\n        _secLeft = 60 * (_isSess ? sessionLength : breakLength);\n      } else {\n        _isSess = isSession;\n        _secLeft = secondsLeft - 1;\n      }\n      return {\n        ...state,\n        secondsLeft: _secLeft,\n        isSession: _isSess\n      }\n\n\n    default:\n      return state;\n  }\n}\n\n\n\n//","import React from 'react'\nimport './css/Lcd.scss'\n\nexport default function Lcd(props) {\n  return (\n    <div className={props.className}>\n      <div className='display-background'>{props.backgroundText}\n        <div id={props.id} className='display-foreground'>{props.children}</div>\n      </div>\n    </div>\n  )\n}\n","import './css/TimerLengthPanel.scss';\nimport React from 'react';\nimport Lcd from './Lcd';\n\n\nconst TimerLengthPanel = (props) => {\n  //\n  const { id, length, decClick, incClick, isSession } = props;\n\n  let sessionOnOffClass;\n  if (isSession) {\n    sessionOnOffClass = (id.toLowerCase() === 'session') ? 'session-break-on' : 'session-break-off';\n  } else {\n    sessionOnOffClass = (id.toLowerCase() === 'session') ? 'session-break-off' : 'session-break-on';\n  }\n\n  //\n  return (\n    <div className='timer-length-panel'>\n\n      <div id={`${id.toLowerCase()}-label`} className={`session-break ${sessionOnOffClass}`}>{id}</div>\n\n      <div className='buttons-container'>\n\n        <button\n          className='round-button regular text-color'\n          id={`${id.toLowerCase()}-decrement`}\n          onClick={decClick}\n        >\n          <i className='fa fa-arrow-down' aria-hidden='true'></i>\n        </button>\n\n        <Lcd id={`${id.toLowerCase()}-length`} backgroundText='88' className='panel-font-size'>\n          {length}\n        </Lcd>\n\n        <button\n          className='round-button regular text-color'\n          id={`${id.toLowerCase()}-increment`}\n          onClick={incClick}\n        >\n          <i className='fa fa-arrow-up' aria-hidden='true'></i>\n        </button>\n      </div>\n\n      {/* <h1 className='text-color off-the-screen' id={`${id.toLowerCase()}-label`}>{id}</h1> */}\n\n    </div>\n  );\n}\n\n\nexport default TimerLengthPanel","import './css/TimerDisplay.scss'\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { reset, start, stop } from '../actions'\nimport Lcd from './Lcd';\n\nclass TimerDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sample = process.env.PUBLIC_URL + '/samples/alarm-clock-01.mp3';\n    this.player = React.createRef();\n  }\n\n  getMMSS = (seconds) => {\n    const min = Math.floor(seconds / 60);\n    const sec = seconds % 60;\n    let mmss = min < 10 ? '0' : '';\n    mmss += `${min}:`;\n    mmss += sec < 10 ? '0' : '';\n    return mmss + sec;\n  }\n\n  async playAlarm() {\n    try {\n      await this.player.play();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  reset = () => {\n    this.props.reset();\n    this.player.pause();\n    this.player.currentTime = 0;\n  }\n\n\n  render() {\n    const { start, stop, isRunning, isSession, secondsLeft } = this.props;\n\n    if (secondsLeft === 0) {\n      this.playAlarm()\n    }\n\n    let startStop;\n    let startStopText;\n\n    if (isRunning) {\n      startStop = stop;\n      startStopText = 'STOP';\n    } else {\n      startStop = start;\n      startStopText = 'START';\n    }\n\n    const sessionOnOffClass = isSession ? 'session-break-on' : 'session-break-off';\n    const breakOnOffClass = isSession ? 'session-break-off' : 'session-break-on';\n\n    return (\n      <div className='timer-display text-color' >\n        <audio\n          src={this.sample}\n          preload=''\n          className='clip'\n          id='beep'\n          ref={ref => this.player = ref}\n        ></audio>\n        <div id='timer-label' className='off-the-screen'>\n          {isSession ? 'Session' : 'Break'}\n        </div>\n\n        <div className='flex-space-around'>\n          <button\n            id='start_stop'\n            className='round-button large'\n            onClick={startStop}>\n            <i\n              className={`fa fa-pause led-padding ${isRunning ? 'pause-led-on' : 'pause-led-off'}`}\n              aria-hidden='true'></i>\n            <i className={`fa fa-play led-padding ${isRunning ? 'play-led-off' : 'play-led-on'}`}\n              aria-hidden='true'></i>\n          </button>\n\n\n          <Lcd\n            id='time-left'\n            backgroundText='88:88'\n            className='time-left-size'>\n            {this.getMMSS(secondsLeft)}\n          </Lcd>\n\n          <div id='br'></div>\n\n          <button\n            id='reset'\n            className='round-button large text-color'\n            onClick={this.reset}>\n            <i className='fa fa-refresh' aria-hidden='true'></i>\n          </button>\n\n        </div>\n\n        {/* <div className='session-break'>\n          <div className={`half-width ${sessionOnOffClass}`}>SESSION</div>\n          <div className={`half-width ${breakOnOffClass}`}>BREAK</div>\n        </div> */}\n\n        {/* <div className='flex-space-around' >\n\n\n        </div> */}\n\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isSession: state.isSession,\n    isRunning: state.isRunning,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    reset() {\n      dispatch(reset());\n    },\n    start() {\n      dispatch(start());\n    },\n    stop() {\n      dispatch(stop());\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimerDisplay);\n\n","import accurateInterval from 'accurate-interval';\n\n\n// action constant\nexport const BREAK_INCREMENT = 'BREAK_INCREMENT';\nexport const BREAK_DECREMENT = 'BREAK_DECREMENT';\nexport const SESSION_INCREMENT = 'SESSION_INCREMENT';\nexport const SESSION_DECREMENT = 'SESSION_DECREMENT';\nexport const RESET = 'RESET';\nexport const START = 'START';\nexport const DEC_TIME_LEFT = 'DEC_TIME_LEFT';\nexport const STOP = 'STOP';\n\n//\n\n// break action creators\nexport const breakIncrement = () => {\n  return { type: BREAK_INCREMENT }\n}\n\nexport const breakDecrement = () => {\n  return { type: BREAK_DECREMENT }\n}\n\n// session action creators\nexport const sessionIncrement = () => {\n  return { type: SESSION_INCREMENT }\n}\n\nexport const sessionDecrement = () => {\n  return { type: SESSION_DECREMENT }\n}\n\n\n// timer\nexport const reset = () => {\n  return (dispatch, getStore) => {\n    // clearInterval(getStore().timerId);\n    const timerId = getStore().timerId;\n    if (timerId != null) {\n      timerId.clear();\n    }\n    dispatch({ type: RESET });\n  }\n}\n\n\nexport const start = () => {\n  return (dispatch) => {\n    let timerId = accurateInterval((schedTime) => {\n      dispatch({ type: DEC_TIME_LEFT })\n    }, 1000);\n\n    dispatch({\n      type: START,\n      payload: timerId\n    });\n  }\n}\n\n\nexport const stop = () => {\n  return (dispatch, getStore) => {\n    const timerId = getStore().timerId;\n    if (timerId != null) {\n      timerId.clear();\n    }\n    dispatch({ type: STOP });\n  }\n}\n","import React from 'react';\nimport './css/App.scss';\nimport { connect } from 'react-redux';\nimport {\n  breakDecrement,\n  breakIncrement,\n  sessionDecrement,\n  sessionIncrement\n} from '../actions';\n\nimport TimerLengthPanel from './TimerLenghtPanel';\nimport TimerDisplay from './TimerDisplay';\n\nconst App = (props) => {\n\n  const {\n    sessionLength,\n    breakLength,\n    breakDecrement,\n    breakIncrement,\n    sessionDecrement,\n    sessionIncrement,\n    secondsLeft,\n    isSession\n  } = props\n\n  return (\n    <div className='app'>\n\n      <div className='clock-body'>\n        <TimerDisplay secondsLeft={secondsLeft} />\n\n        <div className='panel-container'>\n\n          <TimerLengthPanel\n            id='SESSION'\n            length={sessionLength}\n            incClick={sessionIncrement}\n            decClick={sessionDecrement}\n            isSession={isSession}\n          />\n\n          <TimerLengthPanel\n            id='BREAK'\n            length={breakLength}\n            incClick={breakIncrement}\n            decClick={breakDecrement}\n            isSession={isSession}\n          />\n\n        </div>\n\n      </div>\n      <footer>\n        FreeCodeCamp Pomodoro Clock - &copy; Luca M - <a\n          href='https://github.com/lukino999/FCC-Pomodoro-Clock-React'\n          target='_blank'>source</a></footer>\n    </div >\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    breakLength: state.breakLength,\n    sessionLength: state.sessionLength,\n    secondsLeft: state.secondsLeft,\n    isSession: state.isSession\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    breakIncrement() {\n      dispatch(breakIncrement())\n    },\n\n    breakDecrement() {\n      dispatch(breakDecrement())\n    },\n\n    sessionIncrement() {\n      dispatch(sessionIncrement())\n    },\n\n    sessionDecrement() {\n      dispatch(sessionDecrement())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import './index.css';\nimport React from 'react';\nimport thunkMiddleware from 'redux-thunk';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducers';\nimport App from './components/App';\n\n\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}